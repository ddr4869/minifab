syntax = "proto3";

package orderer;

option go_package = "github.com/ddr4869/minifab/proto/orderer";

import "proto/common/common.proto";

// OrdererService - Orderer 노드 서비스
service OrdererService {
    // 제네시스 블록 생성 및 부트스트랩
    rpc BootstrapNetwork(BootstrapRequest) returns (BootstrapResponse) {}
    
    // 블록 관련
    rpc SubmitBlock(common.Envelope) returns (BlockResponse) {}
    rpc GetBlock(BlockRequest) returns (common.Block) {}
    
    // 채널 관련
    rpc CreateChannel(ChannelRequest) returns (ChannelResponse) {}
    rpc GetChannelInfo(ChannelInfoRequest) returns (ChannelInfoResponse) {}
    
    // 상태 확인
    rpc GetOrdererStatus(OrdererStatusRequest) returns (OrdererStatusResponse) {}
}

// BootstrapRequest - 네트워크 부트스트랩 요청
message BootstrapRequest {
    string configtx_path = 1;     // configtx.yaml 파일 경로
    string profile = 2;           // 프로파일 이름
    string genesis_file = 3;      // 제네시스 파일 저장 경로
    string msp_id = 4;            // MSP ID
    string msp_path = 5;          // MSP 경로
}

// BootstrapResponse - 부트스트랩 응답
message BootstrapResponse {
    common.StatusCode status = 1;
    string message = 2;
    string genesis_file = 3;
    string channel_id = 4;
}

// BlockRequest - 블록 요청
message BlockRequest {
    uint64 block_number = 1;
    string channel_id = 2;
}

// BlockResponse - 블록 응답
message BlockResponse {
    common.StatusCode status = 1;
    string message = 2;
    common.Block block = 3;
}

// ChannelRequest - 채널 생성 요청
message ChannelRequest {
    string channel_name = 1;
    string configtx_path = 2;     
    string profile = 3;           
}

// ChannelResponse - 채널 생성 응답
message ChannelResponse {
    common.StatusCode status = 1;
    string message = 2;
    string channel_id = 3;
}

// ChannelInfoRequest - 채널 정보 요청
message ChannelInfoRequest {
    string channel_id = 1;
}

// ChannelInfoResponse - 채널 정보 응답
message ChannelInfoResponse {
    common.StatusCode status = 1;
    string message = 2;
    ChannelInfo info = 3;
}

// ChannelInfo - 채널 정보
message ChannelInfo {
    string channel_id = 1;
    uint64 height = 2;
    bytes current_block_hash = 3;
    bytes previous_block_hash = 4;
}

// OrdererStatusRequest - Orderer 상태 요청
message OrdererStatusRequest {
    bool include_channels = 1;
}

// OrdererStatusResponse - Orderer 상태 응답
message OrdererStatusResponse {
    common.StatusCode status = 1;
    string message = 2;
    OrdererStatus orderer_status = 3;
}

// OrdererStatus - Orderer 상태
message OrdererStatus {
    string orderer_id = 1;
    string endpoint = 2;
    repeated string channels = 3;
    int64 uptime_seconds = 4;
    string version = 5;
} 