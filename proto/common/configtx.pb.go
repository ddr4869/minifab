// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/common/configtx.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigTx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Organizations []*Organization        `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
	Orderer       *OrdererConfig         `protobuf:"bytes,2,opt,name=orderer,proto3" json:"orderer,omitempty"`
	Channel       *ChannelConfig         `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Profiles      map[string][]byte      `protobuf:"bytes,4,rep,name=profiles,proto3" json:"profiles,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // YAML 데이터를 bytes로 저장
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigTx) Reset() {
	*x = ConfigTx{}
	mi := &file_proto_common_configtx_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigTx) ProtoMessage() {}

func (x *ConfigTx) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_configtx_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigTx.ProtoReflect.Descriptor instead.
func (*ConfigTx) Descriptor() ([]byte, []int) {
	return file_proto_common_configtx_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigTx) GetOrganizations() []*Organization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *ConfigTx) GetOrderer() *OrdererConfig {
	if x != nil {
		return x.Orderer
	}
	return nil
}

func (x *ConfigTx) GetChannel() *ChannelConfig {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *ConfigTx) GetProfiles() map[string][]byte {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type Organization struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id               string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	MspDir           string                 `protobuf:"bytes,3,opt,name=msp_dir,json=mspDir,proto3" json:"msp_dir,omitempty"`
	OrdererEndpoints []string               `protobuf:"bytes,4,rep,name=orderer_endpoints,json=ordererEndpoints,proto3" json:"orderer_endpoints,omitempty"`
	AnchorPeers      []*AnchorPeer          `protobuf:"bytes,5,rep,name=anchor_peers,json=anchorPeers,proto3" json:"anchor_peers,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Organization) Reset() {
	*x = Organization{}
	mi := &file_proto_common_configtx_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_configtx_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_proto_common_configtx_proto_rawDescGZIP(), []int{1}
}

func (x *Organization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Organization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Organization) GetMspDir() string {
	if x != nil {
		return x.MspDir
	}
	return ""
}

func (x *Organization) GetOrdererEndpoints() []string {
	if x != nil {
		return x.OrdererEndpoints
	}
	return nil
}

func (x *Organization) GetAnchorPeers() []*AnchorPeer {
	if x != nil {
		return x.AnchorPeers
	}
	return nil
}

type AnchorPeer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnchorPeer) Reset() {
	*x = AnchorPeer{}
	mi := &file_proto_common_configtx_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnchorPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnchorPeer) ProtoMessage() {}

func (x *AnchorPeer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_configtx_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnchorPeer.ProtoReflect.Descriptor instead.
func (*AnchorPeer) Descriptor() ([]byte, []int) {
	return file_proto_common_configtx_proto_rawDescGZIP(), []int{2}
}

func (x *AnchorPeer) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *AnchorPeer) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type OrdererConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchTimeout  string                 `protobuf:"bytes,1,opt,name=batch_timeout,json=batchTimeout,proto3" json:"batch_timeout,omitempty"`
	BatchSize     *BatchSize             `protobuf:"bytes,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrdererConfig) Reset() {
	*x = OrdererConfig{}
	mi := &file_proto_common_configtx_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrdererConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdererConfig) ProtoMessage() {}

func (x *OrdererConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_configtx_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdererConfig.ProtoReflect.Descriptor instead.
func (*OrdererConfig) Descriptor() ([]byte, []int) {
	return file_proto_common_configtx_proto_rawDescGZIP(), []int{3}
}

func (x *OrdererConfig) GetBatchTimeout() string {
	if x != nil {
		return x.BatchTimeout
	}
	return ""
}

func (x *OrdererConfig) GetBatchSize() *BatchSize {
	if x != nil {
		return x.BatchSize
	}
	return nil
}

type BatchSize struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MaxMessageCount   int32                  `protobuf:"varint,1,opt,name=max_message_count,json=maxMessageCount,proto3" json:"max_message_count,omitempty"`
	AbsoluteMaxBytes  string                 `protobuf:"bytes,2,opt,name=absolute_max_bytes,json=absoluteMaxBytes,proto3" json:"absolute_max_bytes,omitempty"`
	PreferredMaxBytes string                 `protobuf:"bytes,3,opt,name=preferred_max_bytes,json=preferredMaxBytes,proto3" json:"preferred_max_bytes,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BatchSize) Reset() {
	*x = BatchSize{}
	mi := &file_proto_common_configtx_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSize) ProtoMessage() {}

func (x *BatchSize) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_configtx_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSize.ProtoReflect.Descriptor instead.
func (*BatchSize) Descriptor() ([]byte, []int) {
	return file_proto_common_configtx_proto_rawDescGZIP(), []int{4}
}

func (x *BatchSize) GetMaxMessageCount() int32 {
	if x != nil {
		return x.MaxMessageCount
	}
	return 0
}

func (x *BatchSize) GetAbsoluteMaxBytes() string {
	if x != nil {
		return x.AbsoluteMaxBytes
	}
	return ""
}

func (x *BatchSize) GetPreferredMaxBytes() string {
	if x != nil {
		return x.PreferredMaxBytes
	}
	return ""
}

type ChannelConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policies      string                 `protobuf:"bytes,1,opt,name=policies,proto3" json:"policies,omitempty"` // interface{} 대신 string으로 처리
	Organizations []*Organization        `protobuf:"bytes,2,rep,name=organizations,proto3" json:"organizations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelConfig) Reset() {
	*x = ChannelConfig{}
	mi := &file_proto_common_configtx_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelConfig) ProtoMessage() {}

func (x *ChannelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_configtx_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelConfig.ProtoReflect.Descriptor instead.
func (*ChannelConfig) Descriptor() ([]byte, []int) {
	return file_proto_common_configtx_proto_rawDescGZIP(), []int{5}
}

func (x *ChannelConfig) GetPolicies() string {
	if x != nil {
		return x.Policies
	}
	return ""
}

func (x *ChannelConfig) GetOrganizations() []*Organization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

type Consortium struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Organizations []*Organization        `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Consortium) Reset() {
	*x = Consortium{}
	mi := &file_proto_common_configtx_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Consortium) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consortium) ProtoMessage() {}

func (x *Consortium) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_configtx_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consortium.ProtoReflect.Descriptor instead.
func (*Consortium) Descriptor() ([]byte, []int) {
	return file_proto_common_configtx_proto_rawDescGZIP(), []int{6}
}

func (x *Consortium) GetOrganizations() []*Organization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

type SystemChannelConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchTimeout  string                 `protobuf:"bytes,1,opt,name=batch_timeout,json=batchTimeout,proto3" json:"batch_timeout,omitempty"`
	BatchSize     *BatchSize             `protobuf:"bytes,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	Organization  *Organization          `protobuf:"bytes,3,opt,name=organization,proto3" json:"organization,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemChannelConfig) Reset() {
	*x = SystemChannelConfig{}
	mi := &file_proto_common_configtx_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemChannelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemChannelConfig) ProtoMessage() {}

func (x *SystemChannelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_configtx_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemChannelConfig.ProtoReflect.Descriptor instead.
func (*SystemChannelConfig) Descriptor() ([]byte, []int) {
	return file_proto_common_configtx_proto_rawDescGZIP(), []int{7}
}

func (x *SystemChannelConfig) GetBatchTimeout() string {
	if x != nil {
		return x.BatchTimeout
	}
	return ""
}

func (x *SystemChannelConfig) GetBatchSize() *BatchSize {
	if x != nil {
		return x.BatchSize
	}
	return nil
}

func (x *SystemChannelConfig) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type SystemChannelInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Orderer       *SystemChannelConfig   `protobuf:"bytes,1,opt,name=orderer,proto3" json:"orderer,omitempty"`
	Consortiums   []*Organization        `protobuf:"bytes,2,rep,name=consortiums,proto3" json:"consortiums,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemChannelInfo) Reset() {
	*x = SystemChannelInfo{}
	mi := &file_proto_common_configtx_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemChannelInfo) ProtoMessage() {}

func (x *SystemChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_configtx_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemChannelInfo.ProtoReflect.Descriptor instead.
func (*SystemChannelInfo) Descriptor() ([]byte, []int) {
	return file_proto_common_configtx_proto_rawDescGZIP(), []int{8}
}

func (x *SystemChannelInfo) GetOrderer() *SystemChannelConfig {
	if x != nil {
		return x.Orderer
	}
	return nil
}

func (x *SystemChannelInfo) GetConsortiums() []*Organization {
	if x != nil {
		return x.Consortiums
	}
	return nil
}

type AppChannelProfile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Application   *ChannelConfig         `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppChannelProfile) Reset() {
	*x = AppChannelProfile{}
	mi := &file_proto_common_configtx_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppChannelProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppChannelProfile) ProtoMessage() {}

func (x *AppChannelProfile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_configtx_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppChannelProfile.ProtoReflect.Descriptor instead.
func (*AppChannelProfile) Descriptor() ([]byte, []int) {
	return file_proto_common_configtx_proto_rawDescGZIP(), []int{9}
}

func (x *AppChannelProfile) GetApplication() *ChannelConfig {
	if x != nil {
		return x.Application
	}
	return nil
}

type Profiles struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SystemChannel *SystemChannelInfo     `protobuf:"bytes,1,opt,name=system_channel,json=systemChannel,proto3" json:"system_channel,omitempty"`
	AppChannel    *AppChannelProfile     `protobuf:"bytes,2,opt,name=app_channel,json=appChannel,proto3" json:"app_channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Profiles) Reset() {
	*x = Profiles{}
	mi := &file_proto_common_configtx_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profiles) ProtoMessage() {}

func (x *Profiles) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_configtx_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profiles.ProtoReflect.Descriptor instead.
func (*Profiles) Descriptor() ([]byte, []int) {
	return file_proto_common_configtx_proto_rawDescGZIP(), []int{10}
}

func (x *Profiles) GetSystemChannel() *SystemChannelInfo {
	if x != nil {
		return x.SystemChannel
	}
	return nil
}

func (x *Profiles) GetAppChannel() *AppChannelProfile {
	if x != nil {
		return x.AppChannel
	}
	return nil
}

var File_proto_common_configtx_proto protoreflect.FileDescriptor

const file_proto_common_configtx_proto_rawDesc = "" +
	"\n" +
	"\x1bproto/common/configtx.proto\x12\x06common\"\xa1\x02\n" +
	"\bConfigTx\x12:\n" +
	"\rorganizations\x18\x01 \x03(\v2\x14.common.OrganizationR\rorganizations\x12/\n" +
	"\aorderer\x18\x02 \x01(\v2\x15.common.OrdererConfigR\aorderer\x12/\n" +
	"\achannel\x18\x03 \x01(\v2\x15.common.ChannelConfigR\achannel\x12:\n" +
	"\bprofiles\x18\x04 \x03(\v2\x1e.common.ConfigTx.ProfilesEntryR\bprofiles\x1a;\n" +
	"\rProfilesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"\xaf\x01\n" +
	"\fOrganization\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x17\n" +
	"\amsp_dir\x18\x03 \x01(\tR\x06mspDir\x12+\n" +
	"\x11orderer_endpoints\x18\x04 \x03(\tR\x10ordererEndpoints\x125\n" +
	"\fanchor_peers\x18\x05 \x03(\v2\x12.common.AnchorPeerR\vanchorPeers\"4\n" +
	"\n" +
	"AnchorPeer\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\"f\n" +
	"\rOrdererConfig\x12#\n" +
	"\rbatch_timeout\x18\x01 \x01(\tR\fbatchTimeout\x120\n" +
	"\n" +
	"batch_size\x18\x02 \x01(\v2\x11.common.BatchSizeR\tbatchSize\"\x95\x01\n" +
	"\tBatchSize\x12*\n" +
	"\x11max_message_count\x18\x01 \x01(\x05R\x0fmaxMessageCount\x12,\n" +
	"\x12absolute_max_bytes\x18\x02 \x01(\tR\x10absoluteMaxBytes\x12.\n" +
	"\x13preferred_max_bytes\x18\x03 \x01(\tR\x11preferredMaxBytes\"g\n" +
	"\rChannelConfig\x12\x1a\n" +
	"\bpolicies\x18\x01 \x01(\tR\bpolicies\x12:\n" +
	"\rorganizations\x18\x02 \x03(\v2\x14.common.OrganizationR\rorganizations\"H\n" +
	"\n" +
	"Consortium\x12:\n" +
	"\rorganizations\x18\x01 \x03(\v2\x14.common.OrganizationR\rorganizations\"\xa6\x01\n" +
	"\x13SystemChannelConfig\x12#\n" +
	"\rbatch_timeout\x18\x01 \x01(\tR\fbatchTimeout\x120\n" +
	"\n" +
	"batch_size\x18\x02 \x01(\v2\x11.common.BatchSizeR\tbatchSize\x128\n" +
	"\forganization\x18\x03 \x01(\v2\x14.common.OrganizationR\forganization\"\x82\x01\n" +
	"\x11SystemChannelInfo\x125\n" +
	"\aorderer\x18\x01 \x01(\v2\x1b.common.SystemChannelConfigR\aorderer\x126\n" +
	"\vconsortiums\x18\x02 \x03(\v2\x14.common.OrganizationR\vconsortiums\"L\n" +
	"\x11AppChannelProfile\x127\n" +
	"\vapplication\x18\x01 \x01(\v2\x15.common.ChannelConfigR\vapplication\"\x88\x01\n" +
	"\bProfiles\x12@\n" +
	"\x0esystem_channel\x18\x01 \x01(\v2\x19.common.SystemChannelInfoR\rsystemChannel\x12:\n" +
	"\vapp_channel\x18\x02 \x01(\v2\x19.common.AppChannelProfileR\n" +
	"appChannelB)Z'github.com/ddr4869/minifab/proto/commonb\x06proto3"

var (
	file_proto_common_configtx_proto_rawDescOnce sync.Once
	file_proto_common_configtx_proto_rawDescData []byte
)

func file_proto_common_configtx_proto_rawDescGZIP() []byte {
	file_proto_common_configtx_proto_rawDescOnce.Do(func() {
		file_proto_common_configtx_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_common_configtx_proto_rawDesc), len(file_proto_common_configtx_proto_rawDesc)))
	})
	return file_proto_common_configtx_proto_rawDescData
}

var file_proto_common_configtx_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_common_configtx_proto_goTypes = []any{
	(*ConfigTx)(nil),            // 0: common.ConfigTx
	(*Organization)(nil),        // 1: common.Organization
	(*AnchorPeer)(nil),          // 2: common.AnchorPeer
	(*OrdererConfig)(nil),       // 3: common.OrdererConfig
	(*BatchSize)(nil),           // 4: common.BatchSize
	(*ChannelConfig)(nil),       // 5: common.ChannelConfig
	(*Consortium)(nil),          // 6: common.Consortium
	(*SystemChannelConfig)(nil), // 7: common.SystemChannelConfig
	(*SystemChannelInfo)(nil),   // 8: common.SystemChannelInfo
	(*AppChannelProfile)(nil),   // 9: common.AppChannelProfile
	(*Profiles)(nil),            // 10: common.Profiles
	nil,                         // 11: common.ConfigTx.ProfilesEntry
}
var file_proto_common_configtx_proto_depIdxs = []int32{
	1,  // 0: common.ConfigTx.organizations:type_name -> common.Organization
	3,  // 1: common.ConfigTx.orderer:type_name -> common.OrdererConfig
	5,  // 2: common.ConfigTx.channel:type_name -> common.ChannelConfig
	11, // 3: common.ConfigTx.profiles:type_name -> common.ConfigTx.ProfilesEntry
	2,  // 4: common.Organization.anchor_peers:type_name -> common.AnchorPeer
	4,  // 5: common.OrdererConfig.batch_size:type_name -> common.BatchSize
	1,  // 6: common.ChannelConfig.organizations:type_name -> common.Organization
	1,  // 7: common.Consortium.organizations:type_name -> common.Organization
	4,  // 8: common.SystemChannelConfig.batch_size:type_name -> common.BatchSize
	1,  // 9: common.SystemChannelConfig.organization:type_name -> common.Organization
	7,  // 10: common.SystemChannelInfo.orderer:type_name -> common.SystemChannelConfig
	1,  // 11: common.SystemChannelInfo.consortiums:type_name -> common.Organization
	5,  // 12: common.AppChannelProfile.application:type_name -> common.ChannelConfig
	8,  // 13: common.Profiles.system_channel:type_name -> common.SystemChannelInfo
	9,  // 14: common.Profiles.app_channel:type_name -> common.AppChannelProfile
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_common_configtx_proto_init() }
func file_proto_common_configtx_proto_init() {
	if File_proto_common_configtx_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_common_configtx_proto_rawDesc), len(file_proto_common_configtx_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_common_configtx_proto_goTypes,
		DependencyIndexes: file_proto_common_configtx_proto_depIdxs,
		MessageInfos:      file_proto_common_configtx_proto_msgTypes,
	}.Build()
	File_proto_common_configtx_proto = out.File
	file_proto_common_configtx_proto_goTypes = nil
	file_proto_common_configtx_proto_depIdxs = nil
}
